create:
	flutter create client
	dart create server
	mkdir protos

dirs:
	mkdir -p generated
	dart create generated/fs_common --force
	dart create generated/fs_client --force
	dart create generated/fs_server --force

rm_unused:
	rm generated/fs_common/bin/*.dart generated/fs_common/test/*.dart generated/fs_client/bin/*.dart generated/fs_client/test/*.dart generated/fs_server/bin/*.dart generated/fs_server/test/*.dart

base: dirs rm_unused deps

grpc:
	protoc --dart_out=grpc:generated/fs_common/lib -I protos ${module}.proto

fs: 
	protoc --proto_path protos/ ${module}.proto --fs_out=fs:generated --plugin=protoc-gen-fs=protoc_fullstack/bin/protoc_plugin_fs.exe
	
isar:
	cd generated/fs_common && flutter pub run build_runner build --delete-conflicting-outputs

deps:
	cd generated/fs_common; dart pub add build_runner -d; dart pub add isar_generator -d; dart pub add fullstack_base --path ../../protoc_fullstack/fullstack_base; dart pub get; flutter pub get
	cd generated/fs_client; dart pub add fs_common --path ../fs_common; dart pub add fullstack_base --path ../../protoc_fullstack/fullstack_base; dart pub add flutter_bloc; dart pub add isar_flutter_libs; dart pub get; flutter pub get
	cd generated/fs_server; dart pub add fs_common --path ../fs_common; dart pub add fullstack_base --path ../../protoc_fullstack/fullstack_base; dart pub get; flutter pub get

plugin:
	dart compile exe protoc_fullstack/bin/protoc_plugin_fs.dart

all: base gen

init:
	git submodule update --init --recursive
	cd protoc_fullstack; dart pub get; flutter pub get
	cd protoc_fullstack/fullstack_base; dart pub get; flutter pub get
	cd generated/fs_common; dart pub get; flutter pub get
	cd generated/fs_client; dart pub get; flutter pub get
	cd generated/fs_server; dart pub get; flutter pub get
	cd client; dart pub get; flutter pub get
	cd server; dart pub get; flutter pub get

gen: grpc fs isar